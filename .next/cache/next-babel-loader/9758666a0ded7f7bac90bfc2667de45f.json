{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jarryd/Documents/ActiveUni/Seasonall-NextJS-AnimeJS/pages/Weather.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport Link from 'next/link';\nimport React, { useEffect, useState } from 'react';\n\nvar weather = function weather() {\n  _s();\n\n  // const [location, setLocation] = useState([]); //useState hook to initialize the state to an empty array\n  var _useState = useState([]),\n      geoData = _useState[0],\n      setGeoData = _useState[1]; //useState hook to initialize the state to an empty array\n\n\n  var _useState2 = useState([]),\n      weatherData = _useState2[0],\n      setWeatherData = _useState2[1]; //useState hook to initialize the state to an empty array\n\n\n  var getData = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var travelLat, travelLong, weatherDateStart, weatherDateEnd, weatherQuery, weatherResponse;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              travelLat = \"34.337306\";\n              travelLong = \"-118.6681779\";\n              weatherDateStart = \"34.337306\";\n              weatherDateEnd = \"-118.6681779\";\n              _context.next = 6;\n              return fetch(\"https://archive-api.open-meteo.com/v1/era5?latitude=\" + travelLat + \"&longitude=\" + travelLong + \"&start_date=\" + weatherDateStart + \"&end_date=\" + weatherDateEnd + \"&timezone=auto&daily=temperature_2m_max,temperature_2m_min,sunrise,sunset,precipitation_sum,rain_sum,snowfall_sum\");\n\n            case 6:\n              weatherQuery = _context.sent;\n              _context.next = 9;\n              return weatherQuery.json();\n\n            case 9:\n              weatherResponse = _context.sent;\n              console.log(weatherResponse);\n              setWeatherData(weatherResponse.results);\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getData() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-1/2 m-16 xl:w-2/5 justify-center overflow-y-hidden\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-xl\",\n        children: \"test component for weather Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: function onClick() {\n          return getData(\"Memphis\");\n        },\n        className: \"bg-blue-500 hover:bg-blue-400 text-white font-bold py-2 my-4 mx-4 px-4 border-b-4 border-blue-700 hover:border-blue-500 rounded\",\n        children: \"Get Weather Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col w-full m-16 xl:w-2/5 justify-center overflow-y-hidden\",\n      children: weatherData && weatherData.length && weatherData.map(function (weatherResult, i) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            id: \"rain\",\n            children: [\"Temp = \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-bold\",\n              children: weatherResult.main.temp\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 34\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            id: \"snow\",\n            children: [\"Wind Speed = \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-bold\",\n              children: weatherResult.wind.speed\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 40\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            id: \"other\",\n            children: [\"Humidity = \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-bold\",\n              children: weatherResult.main.humidity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 39\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, _this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 3\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(weather, \"Sed6MAt8O/Vj4pC7tA/738gOHVs=\");\n\nexport default weather;","map":{"version":3,"sources":["/Users/jarryd/Documents/ActiveUni/Seasonall-NextJS-AnimeJS/pages/Weather.jsx"],"names":["Link","React","useEffect","useState","weather","geoData","setGeoData","weatherData","setWeatherData","getData","travelLat","travelLong","weatherDateStart","weatherDateEnd","fetch","weatherQuery","json","weatherResponse","console","log","results","length","map","weatherResult","i","main","temp","wind","speed","humidity"],"mappings":";;;;;;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AAGA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAAA;;AAEpB;AAFoB,kBAGUD,QAAQ,CAAC,EAAD,CAHlB;AAAA,MAGbE,OAHa;AAAA,MAGJC,UAHI,iBAGwB;;;AAHxB,mBAIkBH,QAAQ,CAAC,EAAD,CAJ1B;AAAA,MAIbI,WAJa;AAAA,MAIAC,cAJA,kBAIgC;;;AAElD,MAAMC,OAAO;AAAA,wEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AACRC,cAAAA,SADQ,GACI,WADJ;AAERC,cAAAA,UAFQ,GAEK,cAFL;AAGRC,cAAAA,gBAHQ,GAGW,WAHX;AAIRC,cAAAA,cAJQ,GAIS,cAJT;AAAA;AAAA,qBAMaC,KAAK,CAAC,yDACjCJ,SADiC,GAEjC,aAFiC,GAGjCC,UAHiC,GAIjC,cAJiC,GAKjCC,gBALiC,GAMjC,YANiC,GAOjCC,cAPiC,GAQjC,mHARgC,CANlB;;AAAA;AAMRE,cAAAA,YANQ;AAAA;AAAA,qBAiBgBA,YAAY,CAACC,IAAb,EAjBhB;;AAAA;AAiBRC,cAAAA,eAjBQ;AAkBdC,cAAAA,OAAO,CAACC,GAAR,CAAYF,eAAZ;AACAT,cAAAA,cAAc,CAACS,eAAe,CAACG,OAAjB,CAAd;;AAnBc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAPX,OAAO;AAAA;AAAA;AAAA,KAAb;;AAsBF,sBACE;AAAA,4BACA;AAAK,MAAA,SAAS,EAAC,sDAAf;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAGE;AAAQ,QAAA,OAAO,EAAE;AAAA,iBAAMA,OAAO,CAAC,SAAD,CAAb;AAAA,SAAjB;AACA,QAAA,SAAS,EAAC,iIADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHF;AAAA;AAAA;AAAA;AAAA;AAAA,aADA,eAUF;AAAK,MAAA,SAAS,EAAC,qEAAf;AAAA,gBAGEF,WAAW,IAAIA,WAAW,CAACc,MAA3B,IAAqCd,WAAW,CAACe,GAAZ,CAAgB,UAACC,aAAD,EAAgBC,CAAhB,EAAqB;AACtE,4BACI;AAAA,kCACA;AAAI,YAAA,EAAE,EAAC,MAAP;AAAA,+CAAqB;AAAM,cAAA,SAAS,EAAC,WAAhB;AAAA,wBAA6BD,aAAa,CAACE,IAAd,CAAmBC;AAAhD;AAAA;AAAA;AAAA;AAAA,qBAArB;AAAA;AAAA;AAAA;AAAA;AAAA,mBADA,eAEA;AAAI,YAAA,EAAE,EAAC,MAAP;AAAA,qDAA2B;AAAM,cAAA,SAAS,EAAC,WAAhB;AAAA,wBAA6BH,aAAa,CAACI,IAAd,CAAmBC;AAAhD;AAAA;AAAA;AAAA;AAAA,qBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFA,eAGA;AAAI,YAAA,EAAE,EAAC,OAAP;AAAA,mDAA0B;AAAM,cAAA,SAAS,EAAC,WAAhB;AAAA,wBAA6BL,aAAa,CAACE,IAAd,CAAmBI;AAAhD;AAAA;AAAA;AAAA;AAAA,qBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHA;AAAA,WAAUL,CAAV;AAAA;AAAA;AAAA;AAAA,iBADJ;AAOC,OARgC;AAHvC;AAAA;AAAA;AAAA;AAAA,aAVE;AAAA,kBADF;AA6BD,CAzDD;;GAAMpB,O;;AA2DJ,eAAeA,OAAf","sourcesContent":["import Link from 'next/link';\nimport React, { useEffect, useState } from 'react';\n\n\nconst weather = () => {\n\n  // const [location, setLocation] = useState([]); //useState hook to initialize the state to an empty array\n  const [geoData, setGeoData] = useState([]); //useState hook to initialize the state to an empty array\n  const [weatherData, setWeatherData] = useState([]); //useState hook to initialize the state to an empty array\n  \n    const getData = async () => {\n      const travelLat = \"34.337306\";\n      const travelLong = \"-118.6681779\";\n      const weatherDateStart = \"34.337306\";\n      const weatherDateEnd = \"-118.6681779\";\n\n      const weatherQuery = await fetch(\"https://archive-api.open-meteo.com/v1/era5?latitude=\" +\n      travelLat +\n      \"&longitude=\" +\n      travelLong +\n      \"&start_date=\" +\n      weatherDateStart +\n      \"&end_date=\" +\n      weatherDateEnd +\n      \"&timezone=auto&daily=temperature_2m_max,temperature_2m_min,sunrise,sunset,precipitation_sum,rain_sum,snowfall_sum\"\n      );\n\n      const weatherResponse = await weatherQuery.json();\n      console.log(weatherResponse);\n      setWeatherData(weatherResponse.results);\n    };\n    \n  return(\n    <>\n    <div className=\"w-1/2 m-16 xl:w-2/5 justify-center overflow-y-hidden\">\n      <h1 className=\"text-xl\">test component for weather Data</h1>\n\n      <button onClick={() => getData(\"Memphis\")}      \n      className=\"bg-blue-500 hover:bg-blue-400 text-white font-bold py-2 my-4 mx-4 px-4 border-b-4 border-blue-700 hover:border-blue-500 rounded\">\n        Get Weather Data\n      </button>\n    </div>\n\n  <div className=\"flex flex-col w-full m-16 xl:w-2/5 justify-center overflow-y-hidden\">\n    \n    {\n    weatherData && weatherData.length && weatherData.map((weatherResult, i) =>{\n        return(\n            <div key={i}>\n            <h4 id=\"rain\">Temp = <span className='font-bold'>{weatherResult.main.temp}</span></h4>\n            <h4 id=\"snow\">Wind Speed = <span className='font-bold'>{weatherResult.wind.speed}</span></h4>\n            <h4 id=\"other\">Humidity = <span className='font-bold'>{weatherResult.main.humidity}</span></h4>\n            </div>\n        )\n        })\n    }\n\n  </div>\n\n    </>\n  )\n};\n\n  export default weather;"]},"metadata":{},"sourceType":"module"}