{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jarryd/Documents/ActiveUni/Seasonall-NextJS-AnimeJS/pages/Weather.jsx\";\nimport Link from 'next/link';\nimport React, { useEffect, useState } from 'react';\n\nconst weather = () => {\n  // const [location, setLocation] = useState([]); //useState hook to initialize the state to an empty array\n  const {\n    0: geoData,\n    1: setGeoData\n  } = useState([]); //useState hook to initialize the state to an empty array\n\n  const {\n    0: weatherData,\n    1: setWeatherData\n  } = useState([]); //useState hook to initialize the state to an empty array\n\n  const getData = async location => {\n    const geoKey = '234979e2ff9e423095e4b2c869c1c97b'; //Move this to secure location\n\n    const weatherKey = 'd9e3acc582b222c6021692be631852c5'; //Move this to secure location\n\n    const travelLocation = location;\n    const query = await fetch('https://api.geoapify.com/v1/geocode/search?text=' + travelLocation + \"&limit=1&format=json&apiKey=\" + geoKey);\n    const response = await query.json();\n    console.log(response);\n    setGeoData(response.results);\n    const IPLat = \"34.337306\";\n    const IPLon = \"-118.6681779\";\n    const weatherQuery = await fetch(\"https://api.openweathermap.org/data/2.5/weather?lat=\" + IPLat + \"&lon=\" + IPLon + \"&appid=\" + weatherKey);\n    const weatherResponse = await weatherQuery.json();\n    console.log(weatherResponse);\n    setWeatherData(weatherResponse.results);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-1/2 m-16 xl:w-2/5 justify-center overflow-y-hidden\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-xl\",\n        children: \"test component for weather Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => getData(\"Memphis\"),\n        className: \"bg-blue-500 hover:bg-blue-400 text-white font-bold py-2 my-4 mx-4 px-4 border-b-4 border-blue-700 hover:border-blue-500 rounded\",\n        children: \"Memphis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col w-full m-16 xl:w-2/5 justify-center overflow-y-hidden\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true);\n};\n\nexport default weather;","map":{"version":3,"sources":["/Users/jarryd/Documents/ActiveUni/Seasonall-NextJS-AnimeJS/pages/Weather.jsx"],"names":["Link","React","useEffect","useState","weather","geoData","setGeoData","weatherData","setWeatherData","getData","location","geoKey","weatherKey","travelLocation","query","fetch","response","json","console","log","results","IPLat","IPLon","weatherQuery","weatherResponse"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AAGA,MAAMC,OAAO,GAAG,MAAM;AAEpB;AACA,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBH,QAAQ,CAAC,EAAD,CAAtC,CAHoB,CAGwB;;AAC5C,QAAM;AAAA,OAACI,WAAD;AAAA,OAAcC;AAAd,MAAgCL,QAAQ,CAAC,EAAD,CAA9C,CAJoB,CAIgC;;AAElD,QAAMM,OAAO,GAAG,MAAOC,QAAP,IAAoB;AAClC,UAAMC,MAAM,GAAG,kCAAf,CADkC,CACiB;;AACnD,UAAMC,UAAU,GAAG,kCAAnB,CAFkC,CAEqB;;AACvD,UAAMC,cAAc,GAAGH,QAAvB;AAEA,UAAMI,KAAK,GAAG,MAAMC,KAAK,CAAC,qDAAoDF,cAApD,GAC1B,8BAD0B,GAE1BF,MAFyB,CAAzB;AAGA,UAAMK,QAAQ,GAAG,MAAMF,KAAK,CAACG,IAAN,EAAvB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACAV,IAAAA,UAAU,CAACU,QAAQ,CAACI,OAAV,CAAV;AAEA,UAAMC,KAAK,GAAG,WAAd;AACA,UAAMC,KAAK,GAAG,cAAd;AACA,UAAMC,YAAY,GAAG,MAAMR,KAAK,CAAC,yDAAyDM,KAAzD,GAAiE,OAAjE,GAA2EC,KAA3E,GAAmF,SAAnF,GAA+FV,UAAhG,CAAhC;AACA,UAAMY,eAAe,GAAG,MAAMD,YAAY,CAACN,IAAb,EAA9B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYK,eAAZ;AACAhB,IAAAA,cAAc,CAACgB,eAAe,CAACJ,OAAjB,CAAd;AACD,GAlBD;;AAoBF,sBACE;AAAA,4BACA;AAAK,MAAA,SAAS,EAAC,sDAAf;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAGE;AAAQ,QAAA,OAAO,EAAE,MAAMX,OAAO,CAAC,SAAD,CAA9B;AACA,QAAA,SAAS,EAAC,iIADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAUF;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YAVE;AAAA,kBADF;AAwCD,CAlED;;AAoEE,eAAeL,OAAf","sourcesContent":["import Link from 'next/link';\nimport React, { useEffect, useState } from 'react';\n\n\nconst weather = () => {\n\n  // const [location, setLocation] = useState([]); //useState hook to initialize the state to an empty array\n  const [geoData, setGeoData] = useState([]); //useState hook to initialize the state to an empty array\n  const [weatherData, setWeatherData] = useState([]); //useState hook to initialize the state to an empty array\n  \n    const getData = async (location) => {\n      const geoKey = '234979e2ff9e423095e4b2c869c1c97b'; //Move this to secure location\n      const weatherKey = 'd9e3acc582b222c6021692be631852c5'; //Move this to secure location\n      const travelLocation = location;\n      \n      const query = await fetch('https://api.geoapify.com/v1/geocode/search?text='+ travelLocation +\n      \"&limit=1&format=json&apiKey=\" +\n      geoKey);\n      const response = await query.json();\n      console.log(response);\n      setGeoData(response.results);\n\n      const IPLat = \"34.337306\";\n      const IPLon = \"-118.6681779\";\n      const weatherQuery = await fetch(\"https://api.openweathermap.org/data/2.5/weather?lat=\" + IPLat + \"&lon=\" + IPLon + \"&appid=\" + weatherKey)\n      const weatherResponse = await weatherQuery.json();\n      console.log(weatherResponse);\n      setWeatherData(weatherResponse.results);\n    };\n    \n  return(\n    <>\n    <div className=\"w-1/2 m-16 xl:w-2/5 justify-center overflow-y-hidden\">\n      <h1 className=\"text-xl\">test component for weather Data</h1>\n\n      <button onClick={() => getData(\"Memphis\")}      \n      className=\"bg-blue-500 hover:bg-blue-400 text-white font-bold py-2 my-4 mx-4 px-4 border-b-4 border-blue-700 hover:border-blue-500 rounded\">\n        Memphis\n      </button>\n    </div>\n\n  <div className=\"flex flex-col w-full m-16 xl:w-2/5 justify-center overflow-y-hidden\">\n    \n{/* {weatherData && weatherData.length && weatherData.map((weatherResult, i) =>{\n      return(\n        <div key={i}>\n          <h4 id=\"rain\">Temp = <span className='font-bold'>{weatherResult.main.temp}</span></h4>\n          <h4 id=\"snow\">Wind Speed = <span className='font-bold'>{weatherResult.wind.speed}</span></h4>\n          <h4 id=\"other\">Humidity = <span className='font-bold'>{weatherResult.main.humidity}</span></h4>\n        </div>\n      )\n    }\n    )} */}\n\n{/* Weather Data API Call */}\n  {/* {\n    weatherData && weatherData.length && weatherData.map((weatherResult, i) =>{\n      return(\n        <div key={i}>\n          <h4 id=\"rain\">rain = <span className='font-bold'>{weatherResult.city}</span></h4>\n          <h4 id=\"snow\">snow = <span className='font-bold'>{weatherResult.country}</span></h4>\n          <h4 id=\"other\">other = <span className='font-bold'>{weatherResult.timezone.name}</span></h4>\n        </div>\n      )\n      }\n  } */}\n  </div>\n\n    </>\n  )\n};\n\n  export default weather;"]},"metadata":{},"sourceType":"module"}