{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jarryd/Documents/ActiveUni/Seasonall-NextJS-AnimeJS/pages/apitest.jsx\";\nimport Link from 'next/link';\nimport React, { useEffect, useState } from 'react';\nimport Weather from \"./Weather\";\n\nconst apiPage = () => {\n  // const [location, setLocation] = useState([]); //useState hook to initialize the state to an empty array\n  const {\n    0: geoData,\n    1: setGeoData\n  } = useState([]); //useState hook to initialize the state to an empty array\n\n  const getData = async location => {\n    const geoKey = '234979e2ff9e423095e4b2c869c1c97b'; //Move this to secure location\n\n    const travelLocation = location;\n    const query = await fetch('https://api.geoapify.com/v1/geocode/search?text=' + travelLocation + \"&limit=1&format=json&apiKey=\" + geoKey);\n    const response = await query.json();\n    console.log(response);\n    setGeoData(response.results);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-screen m-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-xl\",\n        children: \"test page for API Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Click a button to test the GeoLocation API\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => getData(\"New York\"),\n        className: \"bg-pink-500 hover:bg-pink-400 text-white font-bold py-2 my-4 mx-4 px-4 border-b-4 border-pink-700 hover:border-pink-500 rounded\",\n        children: \"New York\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => getData(\"Los Angeles\"),\n        className: \"bg-green-500 hover:bg-green-400 text-white font-bold py-2 my-4 mx-4 px-4 border-b-4 border-green-700 hover:border-green-500 rounded\",\n        children: \"Los Angeles\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => getData(\"Memphis\"),\n        className: \"bg-blue-500 hover:bg-blue-400 text-white font-bold py-2 my-4 mx-4 px-4 border-b-4 border-blue-700 hover:border-blue-500 rounded\",\n        children: \"Memphis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-screen m-4 justify-center\",\n      children: [geoData && geoData.length && geoData.map((result, i, weatherResult, v) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              id: \"city\",\n              children: [\"City = \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-bold\",\n                children: result.city\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 32\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              id: \"country\",\n              children: [\"Country = \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-bold\",\n                children: result.country\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 38\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              id: \"Timezone\",\n              children: [\"Timezone = \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-bold\",\n                children: result.timezone.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 40\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 11\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 7\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(Weather, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        href: \"/demo\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/demo\",\n          className: \"px-4 md:px-8 mx-auto my-4 py-2 md:py-3 text-center rounded-full bg-green-500 text-white font-bold uppercase border-green-600 border hover:bg-green-700\",\n          children: \"Go back to Animation Demo Page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 3\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true);\n};\n\nexport default apiPage;","map":{"version":3,"sources":["/Users/jarryd/Documents/ActiveUni/Seasonall-NextJS-AnimeJS/pages/apitest.jsx"],"names":["Link","React","useEffect","useState","Weather","apiPage","geoData","setGeoData","getData","location","geoKey","travelLocation","query","fetch","response","json","console","log","results","length","map","result","i","weatherResult","v","city","country","timezone","name"],"mappings":"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","sourcesContent":["import Link from 'next/link';\nimport React, { useEffect, useState } from 'react';\nimport Weather from \"./Weather\"\n\n\nconst apiPage = () => {\n\n  // const [location, setLocation] = useState([]); //useState hook to initialize the state to an empty array\n  const [geoData, setGeoData] = useState([]); //useState hook to initialize the state to an empty array\n\n    const getData = async (location) => {\n      const geoKey = '234979e2ff9e423095e4b2c869c1c97b'; //Move this to secure location\n      const travelLocation = location;\n      \n      const query = await fetch('https://api.geoapify.com/v1/geocode/search?text='+ travelLocation +\n      \"&limit=1&format=json&apiKey=\" +\n      geoKey);\n      const response = await query.json();\n      console.log(response);\n      setGeoData(response.results);\n    };\n    \n  return(\n    <>\n    <div className=\"w-screen m-4\">\n      <h1 className=\"text-xl\">test page for API Data</h1>\n\n      <h4>Click a button to test the GeoLocation API</h4> \n      <button onClick={() => getData(\"New York\")}\n      className=\"bg-pink-500 hover:bg-pink-400 text-white font-bold py-2 my-4 mx-4 px-4 border-b-4 border-pink-700 hover:border-pink-500 rounded\">\n      New York\n      </button>\n\n      <button onClick={() => getData(\"Los Angeles\")}      \n      className=\"bg-green-500 hover:bg-green-400 text-white font-bold py-2 my-4 mx-4 px-4 border-b-4 border-green-700 hover:border-green-500 rounded\">\n      Los Angeles\n      </button>\n\n      <button onClick={() => getData(\"Memphis\")}      \n      className=\"bg-blue-500 hover:bg-blue-400 text-white font-bold py-2 my-4 mx-4 px-4 border-b-4 border-blue-700 hover:border-blue-500 rounded\">\n        Memphis\n      </button>\n    </div>\n\n  <div className=\"w-screen m-4 justify-center\">\n    \n{/* Geo Data API Call */}\n  {\n    \n   geoData && geoData.length && geoData.map((result, i, weatherResult, v) => {\n    return(\n      <div>\n        <div key={i}>\n          <h4 id=\"city\">City = <span className='font-bold'>{result.city}</span></h4>\n          <h4 id=\"country\">Country = <span className='font-bold'>{result.country}</span></h4>\n          <h4 id=\"Timezone\">Timezone = <span className='font-bold'>{result.timezone.name}</span></h4>\n        </div>\n    </div>\n    )\n    \n    })}\n\n    <Weather />\n    \n  <Link href=\"/demo\">\n  <a href=\"/demo\"\n      className=\"px-4 md:px-8 mx-auto my-4 py-2 md:py-3 text-center rounded-full bg-green-500 text-white font-bold uppercase border-green-600 border hover:bg-green-700\"\n      >\n      Go back to Animation Demo Page    \n      \n    </a>\n  </Link>\n  </div>\n\n    </>\n  )\n};\n\n  export default apiPage;"]},"metadata":{},"sourceType":"module"}