{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jarryd/Documents/ActiveUni/Seasonall-NextJS-AnimeJS/pages/apitest.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport Link from 'next/link';\nimport React, { useEffect, useState } from 'react';\nimport Weather from \"./Weather\";\n\nvar apiPage = function apiPage() {\n  _s();\n\n  // const [location, setLocation] = useState([]); //useState hook to initialize the state to an empty array\n  var _useState = useState([]),\n      geoData = _useState[0],\n      setGeoData = _useState[1]; //useState hook to initialize the state to an empty array\n\n\n  var getData = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(location) {\n      var geoKey, travelLocation, query, response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              geoKey = '234979e2ff9e423095e4b2c869c1c97b'; //Move this to secure location\n\n              travelLocation = location;\n              _context.next = 4;\n              return fetch('https://api.geoapify.com/v1/geocode/search?text=' + travelLocation + \"&limit=1&format=json&apiKey=\" + geoKey);\n\n            case 4:\n              query = _context.sent;\n              _context.next = 7;\n              return query.json();\n\n            case 7:\n              response = _context.sent;\n              console.log(response);\n              setGeoData(response.results);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getData(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-screen justify-center overflow-y-hidden\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-xl\",\n        children: \"test page for API Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }, _this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Click a button to test the GeoLocation API\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: function onClick() {\n          return getData(\"New York\");\n        },\n        className: \"bg-pink-500 hover:bg-pink-400 text-white font-bold py-2 my-4 mx-4 px-4 border-b-4 border-pink-700 hover:border-pink-500 rounded\",\n        children: \"New York\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: function onClick() {\n          return getData(\"Los Angeles\");\n        },\n        className: \"bg-green-500 hover:bg-green-400 text-white font-bold py-2 my-4 mx-4 px-4 border-b-4 border-green-700 hover:border-green-500 rounded\",\n        children: \"Los Angeles\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: function onClick() {\n          return getData(\"Memphis\");\n        },\n        className: \"bg-blue-500 hover:bg-blue-400 text-white font-bold py-2 my-4 mx-4 px-4 border-b-4 border-blue-700 hover:border-blue-500 rounded\",\n        children: \"Memphis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-screen m-4 justify-center\",\n      children: [geoData && geoData.length && geoData.map(function (result, i, weatherResult, v) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              id: \"city\",\n              children: [\"City = \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-bold\",\n                children: result.city\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 32\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 11\n            }, _this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              id: \"country\",\n              children: [\"Country = \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-bold\",\n                children: result.country\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 38\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 11\n            }, _this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              id: \"Timezone\",\n              children: [\"Timezone = \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-bold\",\n                children: result.timezone.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 40\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 11\n            }, _this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 9\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 7\n        }, _this);\n      }), /*#__PURE__*/_jsxDEV(Weather, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 5\n      }, _this), /*#__PURE__*/_jsxDEV(Link, {\n        href: \"/demo\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/demo\",\n          className: \"px-4 md:px-8 mx-auto my-4 py-2 md:py-3 text-center rounded-full bg-green-500 text-white font-bold uppercase border-green-600 border hover:bg-green-700\",\n          children: \"Go back to Animation Demo Page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 3\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 3\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 3\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(apiPage, \"IJeUKyCRrPmQ4Yqdx/82tfp4A+Q=\");\n\nexport default apiPage;","map":{"version":3,"sources":["/Users/jarryd/Documents/ActiveUni/Seasonall-NextJS-AnimeJS/pages/apitest.jsx"],"names":["Link","React","useEffect","useState","Weather","apiPage","geoData","setGeoData","getData","location","geoKey","travelLocation","fetch","query","json","response","console","log","results","length","map","result","i","weatherResult","v","city","country","timezone","name"],"mappings":"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","sourcesContent":["import Link from 'next/link';\nimport React, { useEffect, useState } from 'react';\nimport Weather from \"./Weather\"\n\n\nconst apiPage = () => {\n\n  // const [location, setLocation] = useState([]); //useState hook to initialize the state to an empty array\n  const [geoData, setGeoData] = useState([]); //useState hook to initialize the state to an empty array\n\n    const getData = async (location) => {\n      const geoKey = '234979e2ff9e423095e4b2c869c1c97b'; //Move this to secure location\n      const travelLocation = location;\n      \n      const query = await fetch('https://api.geoapify.com/v1/geocode/search?text='+ travelLocation +\n      \"&limit=1&format=json&apiKey=\" +\n      geoKey);\n      const response = await query.json();\n      console.log(response);\n      setGeoData(response.results);\n    };\n    \n  return(\n    <>\n    <div className=\"w-screen justify-center overflow-y-hidden\">\n      <h1 className=\"text-xl\">test page for API Data</h1>\n\n      <h4>Click a button to test the GeoLocation API</h4> \n      <button onClick={() => getData(\"New York\")}\n      className=\"bg-pink-500 hover:bg-pink-400 text-white font-bold py-2 my-4 mx-4 px-4 border-b-4 border-pink-700 hover:border-pink-500 rounded\">\n      New York\n      </button>\n\n      <button onClick={() => getData(\"Los Angeles\")}      \n      className=\"bg-green-500 hover:bg-green-400 text-white font-bold py-2 my-4 mx-4 px-4 border-b-4 border-green-700 hover:border-green-500 rounded\">\n      Los Angeles\n      </button>\n\n      <button onClick={() => getData(\"Memphis\")}      \n      className=\"bg-blue-500 hover:bg-blue-400 text-white font-bold py-2 my-4 mx-4 px-4 border-b-4 border-blue-700 hover:border-blue-500 rounded\">\n        Memphis\n      </button>\n    </div>\n\n  <div className=\"w-screen m-4 justify-center\">\n    \n{/* Geo Data API Call */}\n  {\n    \n   geoData && geoData.length && geoData.map((result, i, weatherResult, v) => {\n    return(\n      <div>\n        <div key={i}>\n          <h4 id=\"city\">City = <span className='font-bold'>{result.city}</span></h4>\n          <h4 id=\"country\">Country = <span className='font-bold'>{result.country}</span></h4>\n          <h4 id=\"Timezone\">Timezone = <span className='font-bold'>{result.timezone.name}</span></h4>\n        </div>\n    </div>\n    )\n    \n    })}\n\n    <Weather />\n    \n  <Link href=\"/demo\">\n  <a href=\"/demo\"\n      className=\"px-4 md:px-8 mx-auto my-4 py-2 md:py-3 text-center rounded-full bg-green-500 text-white font-bold uppercase border-green-600 border hover:bg-green-700\"\n      >\n      Go back to Animation Demo Page    \n      \n    </a>\n  </Link>\n  </div>\n\n    </>\n  )\n};\n\n  export default apiPage;"]},"metadata":{},"sourceType":"module"}