{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jarryd/Documents/ActiveUni/Seasonall-NextJS-AnimeJS/pages/apitest.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport Link from 'next/link';\nimport React, { useEffect, useState } from 'react';\n\nvar apiPage = function apiPage() {\n  _s();\n\n  // const [location, setLocation] = useState([]); //useState hook to initialize the state to an empty array\n  var _useState = useState([]),\n      geoData = _useState[0],\n      setGeoData = _useState[1]; //useState hook to initialize the state to an empty array\n\n\n  var _useState2 = useState([]),\n      weatherData = _useState2[0],\n      setWeatherData = _useState2[1]; //useState hook to initialize the state to an empty array\n\n\n  var getData = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(location) {\n      var geoKey, weatherKey, travelLocation, query, response, IPLat, IPLon, weatherQuery, weatherResponse;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              geoKey = '234979e2ff9e423095e4b2c869c1c97b'; //Move this to secure location\n\n              weatherKey = 'd9e3acc582b222c6021692be631852c5'; //Move this to secure location\n\n              travelLocation = location;\n              _context.next = 5;\n              return fetch('https://api.geoapify.com/v1/geocode/search?text=' + travelLocation + \"&limit=1&format=json&apiKey=\" + geoKey);\n\n            case 5:\n              query = _context.sent;\n              _context.next = 8;\n              return query.json();\n\n            case 8:\n              response = _context.sent;\n              console.log(response);\n              setGeoData(response.results);\n              IPLat = \"34.337306\";\n              IPLon = \"-118.6681779\";\n              _context.next = 15;\n              return fetch('\"https://api.openweathermap.org/data/2.5/weather?lat=' + IPLat + \"&lon=\" + IPLon + \"&appid=\" + weatherKey);\n\n            case 15:\n              weatherQuery = _context.sent;\n              _context.next = 18;\n              return weatherQuery.json();\n\n            case 18:\n              weatherResponse = _context.sent;\n              console.log(weatherResponse);\n              setWeatherData(weatherResponse.results);\n\n            case 21:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getData(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-1/2 m-16 xl:w-2/5 justify-center overflow-y-hidden\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-xl\",\n        children: \"test page for API Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }, _this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Click a button to test the GeoLocation API\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: function onClick() {\n          return getData(\"New York\");\n        },\n        className: \"bg-pink-500 hover:bg-pink-400 text-white font-bold py-2 my-4 mx-4 px-4 border-b-4 border-pink-700 hover:border-pink-500 rounded\",\n        children: \"New York\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: function onClick() {\n          return getData(\"Los Angeles\");\n        },\n        className: \"bg-green-500 hover:bg-green-400 text-white font-bold py-2 my-4 mx-4 px-4 border-b-4 border-green-700 hover:border-green-500 rounded\",\n        children: \"Los Angeles\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: function onClick() {\n          return getData(\"Memphis\");\n        },\n        className: \"bg-blue-500 hover:bg-blue-400 text-white font-bold py-2 my-4 mx-4 px-4 border-b-4 border-blue-700 hover:border-blue-500 rounded\",\n        children: \"Memphis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col w-full m-16 xl:w-2/5 justify-center overflow-y-hidden\",\n      children: [geoData && geoData.length && geoData.map(function (result, i) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            id: \"city\",\n            children: [\"City = \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-bold\",\n              children: result.city\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 30\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 9\n          }, _this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            id: \"country\",\n            children: [\"Country = \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-bold\",\n              children: result.country\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 36\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 9\n          }, _this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            id: \"Timezone\",\n            children: [\"Timezone = \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-bold\",\n              children: result.timezone.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 38\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 9\n          }, _this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 7\n        }, _this);\n      }), weatherData && weatherData.length && weatherData.map(function (weatherResult, i) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            id: \"rain\",\n            children: [\"rain = \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-bold\",\n              children: weatherResult.city\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 32\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 11\n          }, _this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            id: \"snow\",\n            children: [\"snow = \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-bold\",\n              children: weatherResult.country\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 32\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 11\n          }, _this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            id: \"other\",\n            children: [\"other = \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-bold\",\n              children: weatherResult.timezone.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 34\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 11\n          }, _this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }, _this);\n      }), /*#__PURE__*/_jsxDEV(Link, {\n        href: \"/demo\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/demo\",\n          className: \"px-4 md:px-8 mx-auto my-4 py-2 md:py-3 text-center rounded-full bg-green-500 text-white font-bold uppercase border-green-600 border hover:bg-green-700\",\n          children: \"Go back to Animation Demo Page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 3\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 3\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 3\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(apiPage, \"Sed6MAt8O/Vj4pC7tA/738gOHVs=\");\n\nexport default apiPage;","map":{"version":3,"sources":["/Users/jarryd/Documents/ActiveUni/Seasonall-NextJS-AnimeJS/pages/apitest.jsx"],"names":["Link","React","useEffect","useState","apiPage","geoData","setGeoData","weatherData","setWeatherData","getData","location","geoKey","weatherKey","travelLocation","fetch","query","json","response","console","log","results","IPLat","IPLon","weatherQuery","weatherResponse","length","map","result","i","city","country","timezone","name","weatherResult"],"mappings":";;;;;;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AAGA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAAA;;AAEpB;AAFoB,kBAGUD,QAAQ,CAAC,EAAD,CAHlB;AAAA,MAGbE,OAHa;AAAA,MAGJC,UAHI,iBAGwB;;;AAHxB,mBAIkBH,QAAQ,CAAC,EAAD,CAJ1B;AAAA,MAIbI,WAJa;AAAA,MAIAC,cAJA,kBAIgC;;;AAElD,MAAMC,OAAO;AAAA,wEAAG,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACRC,cAAAA,MADQ,GACC,kCADD,EACqC;;AAC7CC,cAAAA,UAFQ,GAEK,kCAFL,EAEyC;;AACjDC,cAAAA,cAHQ,GAGSH,QAHT;AAAA;AAAA,qBAKMI,KAAK,CAAC,qDAAoDD,cAApD,GAC1B,8BAD0B,GAE1BF,MAFyB,CALX;;AAAA;AAKRI,cAAAA,KALQ;AAAA;AAAA,qBAQSA,KAAK,CAACC,IAAN,EART;;AAAA;AAQRC,cAAAA,QARQ;AASdC,cAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAX,cAAAA,UAAU,CAACW,QAAQ,CAACG,OAAV,CAAV;AAEMC,cAAAA,KAZQ,GAYA,WAZA;AAaRC,cAAAA,KAbQ,GAaA,cAbA;AAAA;AAAA,qBAcaR,KAAK,CAAC,0DAA0DO,KAA1D,GAAkE,OAAlE,GAA4EC,KAA5E,GAAoF,SAApF,GAAgGV,UAAjG,CAdlB;;AAAA;AAcRW,cAAAA,YAdQ;AAAA;AAAA,qBAegBA,YAAY,CAACP,IAAb,EAfhB;;AAAA;AAeRQ,cAAAA,eAfQ;AAgBdN,cAAAA,OAAO,CAACC,GAAR,CAAYK,eAAZ;AACAhB,cAAAA,cAAc,CAACgB,eAAe,CAACJ,OAAjB,CAAd;;AAjBc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAPX,OAAO;AAAA;AAAA;AAAA,KAAb;;AAoBF,sBACE;AAAA,4BACA;AAAK,MAAA,SAAS,EAAC,sDAAf;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHF,eAIE;AAAQ,QAAA,OAAO,EAAE;AAAA,iBAAMA,OAAO,CAAC,UAAD,CAAb;AAAA,SAAjB;AACA,QAAA,SAAS,EAAC,iIADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJF,eASE;AAAQ,QAAA,OAAO,EAAE;AAAA,iBAAMA,OAAO,CAAC,aAAD,CAAb;AAAA,SAAjB;AACA,QAAA,SAAS,EAAC,qIADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eATF,eAcE;AAAQ,QAAA,OAAO,EAAE;AAAA,iBAAMA,OAAO,CAAC,SAAD,CAAb;AAAA,SAAjB;AACA,QAAA,SAAS,EAAC,iIADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAdF;AAAA;AAAA;AAAA;AAAA;AAAA,aADA,eAqBF;AAAK,MAAA,SAAS,EAAC,qEAAf;AAAA,iBAICJ,OAAO,IAAIA,OAAO,CAACoB,MAAnB,IAA6BpB,OAAO,CAACqB,GAAR,CAAY,UAACC,MAAD,EAASC,CAAT,EAAe;AACvD,4BACE;AAAA,kCACE;AAAI,YAAA,EAAE,EAAC,MAAP;AAAA,+CAAqB;AAAM,cAAA,SAAS,EAAC,WAAhB;AAAA,wBAA6BD,MAAM,CAACE;AAApC;AAAA;AAAA;AAAA;AAAA,qBAArB;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE;AAAI,YAAA,EAAE,EAAC,SAAP;AAAA,kDAA2B;AAAM,cAAA,SAAS,EAAC,WAAhB;AAAA,wBAA6BF,MAAM,CAACG;AAApC;AAAA;AAAA;AAAA;AAAA,qBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFF,eAGE;AAAI,YAAA,EAAE,EAAC,UAAP;AAAA,mDAA6B;AAAM,cAAA,SAAS,EAAC,WAAhB;AAAA,wBAA6BH,MAAM,CAACI,QAAP,CAAgBC;AAA7C;AAAA;AAAA;AAAA;AAAA,qBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHF;AAAA,WAAUJ,CAAV;AAAA;AAAA;AAAA;AAAA,iBADF;AAQC,OAT2B,CAJ9B,EAcGrB,WAAW,IAAIA,WAAW,CAACkB,MAA3B,IAAqClB,WAAW,CAACmB,GAAZ,CAAgB,UAACO,aAAD,EAAgBL,CAAhB,EAAqB;AACzE,4BACE;AAAA,kCACE;AAAI,YAAA,EAAE,EAAC,MAAP;AAAA,+CAAqB;AAAM,cAAA,SAAS,EAAC,WAAhB;AAAA,wBAA6BK,aAAa,CAACJ;AAA3C;AAAA;AAAA;AAAA;AAAA,qBAArB;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE;AAAI,YAAA,EAAE,EAAC,MAAP;AAAA,+CAAqB;AAAM,cAAA,SAAS,EAAC,WAAhB;AAAA,wBAA6BI,aAAa,CAACH;AAA3C;AAAA;AAAA;AAAA;AAAA,qBAArB;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFF,eAGE;AAAI,YAAA,EAAE,EAAC,OAAP;AAAA,gDAAuB;AAAM,cAAA,SAAS,EAAC,WAAhB;AAAA,wBAA6BG,aAAa,CAACF,QAAd,CAAuBC;AAApD;AAAA;AAAA;AAAA;AAAA,qBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHF;AAAA,WAAUJ,CAAV;AAAA;AAAA;AAAA;AAAA,iBADF;AAOD,OARqC,CAdxC,eAqCA,QAAC,IAAD;AAAM,QAAA,IAAI,EAAC,OAAX;AAAA,+BACA;AAAG,UAAA,IAAI,EAAC,OAAR;AACI,UAAA,SAAS,EAAC,wJADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,eArCA;AAAA;AAAA;AAAA;AAAA;AAAA,aArBE;AAAA,kBADF;AAuED,CAjGD;;GAAMxB,O;;AAmGJ,eAAeA,OAAf","sourcesContent":["import Link from 'next/link';\nimport React, { useEffect, useState } from 'react';\n\n\nconst apiPage = () => {\n\n  // const [location, setLocation] = useState([]); //useState hook to initialize the state to an empty array\n  const [geoData, setGeoData] = useState([]); //useState hook to initialize the state to an empty array\n  const [weatherData, setWeatherData] = useState([]); //useState hook to initialize the state to an empty array\n  \n    const getData = async (location) => {\n      const geoKey = '234979e2ff9e423095e4b2c869c1c97b'; //Move this to secure location\n      const weatherKey = 'd9e3acc582b222c6021692be631852c5'; //Move this to secure location\n      const travelLocation = location;\n      \n      const query = await fetch('https://api.geoapify.com/v1/geocode/search?text='+ travelLocation +\n      \"&limit=1&format=json&apiKey=\" +\n      geoKey);\n      const response = await query.json();\n      console.log(response);\n      setGeoData(response.results);\n\n      const IPLat = \"34.337306\";\n      const IPLon = \"-118.6681779\";\n      const weatherQuery = await fetch('\"https://api.openweathermap.org/data/2.5/weather?lat=' + IPLat + \"&lon=\" + IPLon + \"&appid=\" + weatherKey)\n      const weatherResponse = await weatherQuery.json();\n      console.log(weatherResponse);\n      setWeatherData(weatherResponse.results);\n    };\n    \n  return(\n    <>\n    <div className=\"w-1/2 m-16 xl:w-2/5 justify-center overflow-y-hidden\">\n      <h1 className=\"text-xl\">test page for API Data</h1>\n\n      <h4>Click a button to test the GeoLocation API</h4> \n      <button onClick={() => getData(\"New York\")}\n      className=\"bg-pink-500 hover:bg-pink-400 text-white font-bold py-2 my-4 mx-4 px-4 border-b-4 border-pink-700 hover:border-pink-500 rounded\">\n      New York\n      </button>\n\n      <button onClick={() => getData(\"Los Angeles\")}      \n      className=\"bg-green-500 hover:bg-green-400 text-white font-bold py-2 my-4 mx-4 px-4 border-b-4 border-green-700 hover:border-green-500 rounded\">\n      Los Angeles\n      </button>\n\n      <button onClick={() => getData(\"Memphis\")}      \n      className=\"bg-blue-500 hover:bg-blue-400 text-white font-bold py-2 my-4 mx-4 px-4 border-b-4 border-blue-700 hover:border-blue-500 rounded\">\n        Memphis\n      </button>\n    </div>\n\n  <div className=\"flex flex-col w-full m-16 xl:w-2/5 justify-center overflow-y-hidden\">\n    \n{/* Geo Data API Call */}\n  {\n   geoData && geoData.length && geoData.map((result, i) => {\n    return(\n      <div key={i}>\n        <h4 id=\"city\">City = <span className='font-bold'>{result.city}</span></h4>\n        <h4 id=\"country\">Country = <span className='font-bold'>{result.country}</span></h4>\n        <h4 id=\"Timezone\">Timezone = <span className='font-bold'>{result.timezone.name}</span></h4>\n      </div>\n    )\n    \n    })}\n    {weatherData && weatherData.length && weatherData.map((weatherResult, i) =>{\n      return(\n        <div key={i}>\n          <h4 id=\"rain\">rain = <span className='font-bold'>{weatherResult.city}</span></h4>\n          <h4 id=\"snow\">snow = <span className='font-bold'>{weatherResult.country}</span></h4>\n          <h4 id=\"other\">other = <span className='font-bold'>{weatherResult.timezone.name}</span></h4>\n        </div>\n      )\n    }\n    )}\n  \n{/* Weather Data API Call */}\n  {/* {\n    weatherData && weatherData.length && weatherData.map((weatherResult, i) =>{\n      return(\n        <div key={i}>\n          <h4 id=\"rain\">rain = <span className='font-bold'>{weatherResult.city}</span></h4>\n          <h4 id=\"snow\">snow = <span className='font-bold'>{weatherResult.country}</span></h4>\n          <h4 id=\"other\">other = <span className='font-bold'>{weatherResult.timezone.name}</span></h4>\n        </div>\n      )\n      }\n  } */}\n  <Link href=\"/demo\">\n  <a href=\"/demo\"\n      className=\"px-4 md:px-8 mx-auto my-4 py-2 md:py-3 text-center rounded-full bg-green-500 text-white font-bold uppercase border-green-600 border hover:bg-green-700\"\n      >\n      Go back to Animation Demo Page    \n      \n    </a>\n  </Link>\n  </div>\n\n    </>\n  )\n};\n\n  export default apiPage;"]},"metadata":{},"sourceType":"module"}