{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jarryd/Documents/ActiveUni/Seasonall-NextJS-AnimeJS/pages/Weather.jsx\";\nimport Link from 'next/link';\nimport React, { useEffect, useState } from 'react';\n\nconst weather = () => {\n  // const [location, setLocation] = useState([]); //useState hook to initialize the state to an empty array\n  const {\n    0: weatherData,\n    1: setWeatherData\n  } = useState([]); //useState hook to initialize the state to an empty array\n\n  const getData = async () => {\n    const travelLat = \"34.337306\";\n    const travelLong = \"-118.6681779\";\n    const weatherDateStart = \"2020-12-01\";\n    const weatherDateEnd = \"2021-02-28\";\n    const weatherQuery = await fetch(\"https://archive-api.open-meteo.com/v1/era5?latitude=\" + travelLat + \"&longitude=\" + travelLong + \"&start_date=\" + weatherDateStart + \"&end_date=\" + weatherDateEnd + \"&timezone=auto&daily=temperature_2m_max,temperature_2m_min,sunrise,sunset,precipitation_sum,rain_sum,snowfall_sum\");\n    const weatherResponse = await weatherQuery.json();\n    console.log(weatherResponse);\n    var item = weatherResponse.daily;\n    var calcMaxTemp = item.temperature_2m_max;\n    var calcMinTemp = item.temperature_2m_min;\n    var calcRainfall = item.rain_sum;\n    var calcSnowfall = item.snowfall_sum;\n    var calcSunrise = item.sunrise;\n    var calcSunset = item.sunset;\n    var avgSunrise = calcSunrise[45].slice(-5);\n    var avgSunset = calcSunset[45].slice(-5);\n    var avgMaxTemp = calcMaxTemp.reduce((a, b) => a + b) / calcMaxTemp.length;\n    var avgMinTemp = calcMinTemp.reduce((a, b) => a + b) / calcMinTemp.length;\n    var avgRainfall = calcRainfall.reduce((a, b) => a + b) / calcRainfall.length;\n    var avgSnowfall = calcSnowfall.reduce((a, b) => a + b) / calcSnowfall.length;\n    var storeMaxTemp = avgMaxTemp.toFixed(1);\n    var storeMinTemp = avgMinTemp.toFixed(1);\n    var storeRainfall = avgRainfall.toFixed(2);\n    var storeSnowfall = avgSnowfall.toFixed(2);\n    const storeWeather = [storeMaxTemp, storeMinTemp, storeRainfall, storeSnowfall, avgSunrise, avgSunset];\n    console.log(storeWeather);\n    setWeatherData(storeWeather);\n    console.log(weatherData);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-1/2 m-16 xl:w-2/5 justify-center overflow-y-hidden\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-xl\",\n        children: \"test component for weather Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => getData(\"Memphis\"),\n        className: \"bg-blue-500 hover:bg-blue-400 text-white font-bold py-2 my-4 mx-4 px-4 border-b-4 border-blue-700 hover:border-blue-500 rounded\",\n        children: \"Get Weather Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col w-full m-16 xl:w-2/5 justify-center overflow-y-hidden\",\n      children: weatherData && weatherData.length && weatherData.map((setWeatherData, i) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            id: \"Line\",\n            children: [\"Item 1 = \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-bold\",\n              children: setWeatherData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 36\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true);\n};\n\nexport default weather;","map":{"version":3,"sources":["/Users/jarryd/Documents/ActiveUni/Seasonall-NextJS-AnimeJS/pages/Weather.jsx"],"names":["Link","React","useEffect","useState","weather","weatherData","setWeatherData","getData","travelLat","travelLong","weatherDateStart","weatherDateEnd","weatherQuery","fetch","weatherResponse","json","console","log","item","daily","calcMaxTemp","temperature_2m_max","calcMinTemp","temperature_2m_min","calcRainfall","rain_sum","calcSnowfall","snowfall_sum","calcSunrise","sunrise","calcSunset","sunset","avgSunrise","slice","avgSunset","avgMaxTemp","reduce","a","b","length","avgMinTemp","avgRainfall","avgSnowfall","storeMaxTemp","toFixed","storeMinTemp","storeRainfall","storeSnowfall","storeWeather","map","i"],"mappings":"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","sourcesContent":["import Link from 'next/link';\nimport React, { useEffect, useState } from 'react';\n\n\nconst weather = () => {\n\n  // const [location, setLocation] = useState([]); //useState hook to initialize the state to an empty array\n  const [weatherData, setWeatherData] = useState([]); //useState hook to initialize the state to an empty array\n  \n    const getData = async () => {\n      const travelLat = \"34.337306\";\n      const travelLong = \"-118.6681779\";\n      const weatherDateStart = \"2020-12-01\";\n      const weatherDateEnd = \"2021-02-28\";\n\n      const weatherQuery = await fetch(\"https://archive-api.open-meteo.com/v1/era5?latitude=\" +\n      travelLat +\n      \"&longitude=\" +\n      travelLong +\n      \"&start_date=\" +\n      weatherDateStart +\n      \"&end_date=\" +\n      weatherDateEnd +\n      \"&timezone=auto&daily=temperature_2m_max,temperature_2m_min,sunrise,sunset,precipitation_sum,rain_sum,snowfall_sum\"\n      );\n      const weatherResponse = await weatherQuery.json();\n      console.log(weatherResponse);\n\n\n      var item = weatherResponse.daily;\n          \n      var calcMaxTemp = item.temperature_2m_max;\n      var calcMinTemp = item.temperature_2m_min;\n      var calcRainfall = item.rain_sum;\n      var calcSnowfall = item.snowfall_sum;\n      var calcSunrise = item.sunrise;\n      var calcSunset = item.sunset;\n\n      var avgSunrise = calcSunrise[45].slice(-5);\n      var avgSunset = calcSunset[45].slice(-5);\n      var avgMaxTemp = calcMaxTemp.reduce((a, b) => a + b) / calcMaxTemp.length;\n      var avgMinTemp = calcMinTemp.reduce((a, b) => a + b) / calcMinTemp.length;\n      var avgRainfall = calcRainfall.reduce((a, b) => a + b) / calcRainfall.length;\n      var avgSnowfall = calcSnowfall.reduce((a, b) => a + b) / calcSnowfall.length;\n      \n      var storeMaxTemp = avgMaxTemp.toFixed(1);\n      var storeMinTemp = avgMinTemp.toFixed(1);\n      var storeRainfall = avgRainfall.toFixed(2);\n      var storeSnowfall = avgSnowfall.toFixed(2);\n      \n      const storeWeather = [storeMaxTemp, storeMinTemp, storeRainfall, storeSnowfall, avgSunrise, avgSunset]\n\n      console.log(storeWeather);\n      setWeatherData(storeWeather);\n      console.log(weatherData);\n    };\n    \n  return(\n    <>\n    <div className=\"w-1/2 m-16 xl:w-2/5 justify-center overflow-y-hidden\">\n      <h1 className=\"text-xl\">test component for weather Data</h1>\n\n      <button onClick={() => getData(\"Memphis\")}      \n      className=\"bg-blue-500 hover:bg-blue-400 text-white font-bold py-2 my-4 mx-4 px-4 border-b-4 border-blue-700 hover:border-blue-500 rounded\">\n        Get Weather Data\n      </button>\n    </div>\n\n  <div className=\"flex flex-col w-full m-16 xl:w-2/5 justify-center overflow-y-hidden\">\n    \n    {\n    weatherData && weatherData.length && weatherData.map((setWeatherData, i) =>{\n        return(\n            <div key={i}>\n            <h4 id=\"Line\">Item 1 = <span className='font-bold'>{setWeatherData}</span></h4>\n            </div>\n        )\n        })\n    }\n\n  </div>\n\n    </>\n  )\n};\n\n  export default weather;"]},"metadata":{},"sourceType":"module"}