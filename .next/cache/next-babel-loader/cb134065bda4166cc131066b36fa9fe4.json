{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jarryd/Documents/ActiveUni/Seasonall-NextJS-AnimeJS/pages/Weather.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\n\nvar weather = function weather() {\n  _s();\n\n  // const [location, setLocation] = useState([]); //useState hook to initialize the state to an empty array\n  var _useState = useState([]),\n      weatherData = _useState[0],\n      setWeatherData = _useState[1];\n\n  var getData = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var travelLat, travelLong, weatherDateStart, weatherDateEnd, weatherQuery, weatherResponse, item, calcMaxTemp, calcMinTemp, calcRainfall, calcSnowfall, calcSunrise, calcSunset, avgSunrise, avgSunset, avgMaxTemp, avgMinTemp, avgRainfall, avgSnowfall, storeMaxTemp, storeMinTemp, storeRainfall, storeSnowfall, weatherResult;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              travelLat = \"34.337306\";\n              travelLong = \"-118.6681779\";\n              weatherDateStart = \"2020-12-01\";\n              weatherDateEnd = \"2021-02-28\";\n              _context.next = 6;\n              return fetch(\"https://archive-api.open-meteo.com/v1/era5?latitude=\" + travelLat + \"&longitude=\" + travelLong + \"&start_date=\" + weatherDateStart + \"&end_date=\" + weatherDateEnd + \"&timezone=auto&daily=temperature_2m_max,temperature_2m_min,sunrise,sunset,precipitation_sum,rain_sum,snowfall_sum\");\n\n            case 6:\n              weatherQuery = _context.sent;\n              _context.next = 9;\n              return weatherQuery.json();\n\n            case 9:\n              weatherResponse = _context.sent;\n              console.log(\"This is weather Response\");\n              console.log(weatherResponse);\n              item = weatherResponse.daily;\n              calcMaxTemp = item.temperature_2m_max;\n              calcMinTemp = item.temperature_2m_min;\n              calcRainfall = item.rain_sum;\n              calcSnowfall = item.snowfall_sum;\n              calcSunrise = item.sunrise;\n              calcSunset = item.sunset;\n              avgSunrise = calcSunrise[45].slice(-5);\n              avgSunset = calcSunset[45].slice(-5);\n              avgMaxTemp = calcMaxTemp.reduce(function (a, b) {\n                return a + b;\n              }) / calcMaxTemp.length;\n              avgMinTemp = calcMinTemp.reduce(function (a, b) {\n                return a + b;\n              }) / calcMinTemp.length;\n              avgRainfall = calcRainfall.reduce(function (a, b) {\n                return a + b;\n              }) / calcRainfall.length;\n              avgSnowfall = calcSnowfall.reduce(function (a, b) {\n                return a + b;\n              }) / calcSnowfall.length;\n              storeMaxTemp = avgMaxTemp.toFixed(1);\n              storeMinTemp = avgMinTemp.toFixed(1);\n              storeRainfall = avgRainfall.toFixed(2);\n              storeSnowfall = avgSnowfall.toFixed(2);\n              console.log(avgSunrise);\n              console.log(avgSunset);\n              console.log(avgMaxTemp);\n              console.log(avgMinTemp);\n              console.log(avgRainfall);\n              console.log(avgSnowfall);\n              console.log(storeMaxTemp);\n              console.log(storeMinTemp);\n              console.log(storeRainfall);\n              console.log(storeSnowfall);\n              weatherResult = {\n                storeMaxTemp: storeMaxTemp,\n                storeMinTemp: storeMinTemp,\n                storeRainfall: storeRainfall,\n                storeSnowfall: storeSnowfall,\n                avgSunrise: avgSunrise,\n                avgSunset: avgSunset\n              };\n              setWeatherData([weatherResult]);\n              console.log(\"this is the weatherData\");\n              console.log(weatherData);\n\n            case 43:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getData() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-1/2 m-16 xl:w-2/5 justify-center overflow-y-hidden\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-xl\",\n        children: \"test component for weather Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: function onClick() {\n          return getData(\"Memphis\");\n        },\n        className: \"bg-blue-500 hover:bg-blue-400 text-white font-bold py-2 my-4 mx-4 px-4 border-b-4 border-blue-700 hover:border-blue-500 rounded\",\n        children: \"Get Weather Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }, _this)\n  }, void 0, false);\n};\n\n_s(weather, \"uPYC6klwQCjqosAFCgeByFfMAQs=\");\n\nexport default weather;","map":{"version":3,"sources":["/Users/jarryd/Documents/ActiveUni/Seasonall-NextJS-AnimeJS/pages/Weather.jsx"],"names":["React","useEffect","useState","weather","weatherData","setWeatherData","getData","travelLat","travelLong","weatherDateStart","weatherDateEnd","fetch","weatherQuery","json","weatherResponse","console","log","item","daily","calcMaxTemp","temperature_2m_max","calcMinTemp","temperature_2m_min","calcRainfall","rain_sum","calcSnowfall","snowfall_sum","calcSunrise","sunrise","calcSunset","sunset","avgSunrise","slice","avgSunset","avgMaxTemp","reduce","a","b","length","avgMinTemp","avgRainfall","avgSnowfall","storeMaxTemp","toFixed","storeMinTemp","storeRainfall","storeSnowfall","weatherResult"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\n\n\nconst weather = () => {\n\n  // const [location, setLocation] = useState([]); //useState hook to initialize the state to an empty array\n  const [weatherData, setWeatherData] = useState([]);\n  \n  const getData = async () => {\n    const travelLat = \"34.337306\";\n    const travelLong = \"-118.6681779\";\n    const weatherDateStart = \"2020-12-01\";\n    const weatherDateEnd = \"2021-02-28\";\n\n    const weatherQuery = await fetch(\"https://archive-api.open-meteo.com/v1/era5?latitude=\" +\n    travelLat +\n    \"&longitude=\" +\n    travelLong +\n    \"&start_date=\" +\n    weatherDateStart +\n    \"&end_date=\" +\n    weatherDateEnd +\n    \"&timezone=auto&daily=temperature_2m_max,temperature_2m_min,sunrise,sunset,precipitation_sum,rain_sum,snowfall_sum\"\n    );\n    const weatherResponse = await weatherQuery.json();\n    console.log(\"This is weather Response\");\n    console.log(weatherResponse);\n\n    var item = weatherResponse.daily;\n        \n    var calcMaxTemp = item.temperature_2m_max;\n    var calcMinTemp = item.temperature_2m_min;\n    var calcRainfall = item.rain_sum;\n    var calcSnowfall = item.snowfall_sum;\n    var calcSunrise = item.sunrise;\n    var calcSunset = item.sunset;\n\n\n    var avgSunrise = calcSunrise[45].slice(-5);\n    var avgSunset = calcSunset[45].slice(-5);\n    var avgMaxTemp = calcMaxTemp.reduce((a, b) => a + b) / calcMaxTemp.length;\n    var avgMinTemp = calcMinTemp.reduce((a, b) => a + b) / calcMinTemp.length;\n    var avgRainfall = calcRainfall.reduce((a, b) => a + b) / calcRainfall.length;\n    var avgSnowfall = calcSnowfall.reduce((a, b) => a + b) / calcSnowfall.length;\n    \n    var storeMaxTemp = avgMaxTemp.toFixed(1);\n    var storeMinTemp = avgMinTemp.toFixed(1);\n    var storeRainfall = avgRainfall.toFixed(2);\n    var storeSnowfall = avgSnowfall.toFixed(2);\n  \n    console.log(avgSunrise);\n    console.log(avgSunset);\n    console.log(avgMaxTemp);\n    console.log(avgMinTemp);\n    console.log(avgRainfall);\n    console.log(avgSnowfall);\n    console.log(storeMaxTemp);\n    console.log(storeMinTemp);\n    console.log(storeRainfall);\n    console.log(storeSnowfall);\n    \n    const weatherResult = {storeMaxTemp, storeMinTemp, storeRainfall, storeSnowfall, avgSunrise, avgSunset};\n      setWeatherData([weatherResult]);\n        console.log(\"this is the weatherData\");\n        console.log(weatherData);\n    };\n  \n  return(\n    <>\n    <div className=\"w-1/2 m-16 xl:w-2/5 justify-center overflow-y-hidden\">\n      <h1 className=\"text-xl\">test component for weather Data</h1>\n\n      <button onClick={() => getData(\"Memphis\")}      \n      className=\"bg-blue-500 hover:bg-blue-400 text-white font-bold py-2 my-4 mx-4 px-4 border-b-4 border-blue-700 hover:border-blue-500 rounded\">\n        Get Weather Data\n      </button>\n    </div>\n\n  {/* <div className=\"flex flex-col w-full m-16 xl:w-2/5 justify-center overflow-y-hidden\">\n    \n\n            <h4 id=\"maxTemp\">Max Temp = <span className='font-bold'>{weatherData.maxTemp}</span></h4>\n            <h4 id=\"minTemp\">Min Temp = <span className='font-bold'>{weatherData.minTemp}</span></h4>\n            <h4 id=\"rainfall\">Rainfall = <span className='font-bold'>{weatherData.rainfall}</span></h4>\n            <h4 id=\"snowfall\">Snowfall = <span className='font-bold'>{weatherData.snowfall}</span></h4>\n            <h4 id=\"sunrise\">Sunrise = <span className='font-bold'>{weatherData.sunrise}</span></h4>\n            <h4 id=\"sunset\">Sunset = <span className='font-bold'>{weatherData.sunset}</span></h4>\n    \n// This part doesnt work yet...\n\n  </div> */}\n\n    </>\n  )\n};\n\n  export default weather;"]},"metadata":{},"sourceType":"module"}