{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jarryd/Documents/ActiveUni/Seasonall-NextJS-AnimeJS/pages/apitest.jsx\";\nimport Link from 'next/link';\nimport React, { useEffect, useState } from 'react';\n\nconst apiPage = () => {\n  // const [location, setLocation] = useState([]); //useState hook to initialize the state to an empty array\n  const {\n    0: geoData,\n    1: setGeoData\n  } = useState([]); //useState hook to initialize the state to an empty array\n\n  const {\n    0: weatherData,\n    1: setWeatherData\n  } = useState([]); //useState hook to initialize the state to an empty array\n\n  const getData = async location => {\n    const geoKey = '234979e2ff9e423095e4b2c869c1c97b'; //Move this to secure location\n\n    const weatherKey = 'd9e3acc582b222c6021692be631852c5'; //Move this to secure location\n\n    const travelLocation = location;\n    const query = await fetch('https://api.geoapify.com/v1/geocode/search?text=' + travelLocation + \"&limit=1&format=json&apiKey=\" + geoKey);\n    const response = await query.json();\n    console.log(response);\n    setGeoData(response.results);\n    const IPLat = \"34.337306\";\n    const IPLon = \"-118.6681779\";\n    const weatherQuery = await fetch('\"https://api.openweathermap.org/data/2.5/weather?lat=' + IPLat + \"&lon=\" + IPLon + \"&appid=\" + weatherKey);\n    const weatherResponse = await weatherQuery.json();\n    console.log(weatherResponse);\n    setWeatherData(weatherResponse.results);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-1/2 m-16 xl:w-2/5 justify-center overflow-y-hidden\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-xl\",\n        children: \"test page for API Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Click a button to test the GeoLocation API\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => getData(\"New York\"),\n        className: \"bg-pink-500 hover:bg-pink-400 text-white font-bold py-2 my-4 mx-4 px-4 border-b-4 border-pink-700 hover:border-pink-500 rounded\",\n        children: \"New York\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => getData(\"Los Angeles\"),\n        className: \"bg-green-500 hover:bg-green-400 text-white font-bold py-2 my-4 mx-4 px-4 border-b-4 border-green-700 hover:border-green-500 rounded\",\n        children: \"Los Angeles\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => getData(\"Memphis\"),\n        className: \"bg-blue-500 hover:bg-blue-400 text-white font-bold py-2 my-4 mx-4 px-4 border-b-4 border-blue-700 hover:border-blue-500 rounded\",\n        children: \"Memphis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col w-full m-16 xl:w-2/5 justify-center overflow-y-hidden\",\n      children: [geoData && geoData.length && geoData.map((result, i) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            id: \"city\",\n            children: [\"City = \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-bold\",\n              children: result.city\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 30\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            id: \"country\",\n            children: [\"Country = \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-bold\",\n              children: result.country\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 36\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            id: \"Timezone\",\n            children: [\"Timezone = \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-bold\",\n              children: result.timezone.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 38\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 9\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 7\n        }, this);\n      }), weatherData && weatherData.length && weatherData.map((weatherResult, i) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            id: \"rain\",\n            children: [\"Temp = \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-bold\",\n              children: weatherResult.main.temp\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 32\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            id: \"snow\",\n            children: [\"Wind Speed = \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-bold\",\n              children: weatherResult.country\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 38\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            id: \"other\",\n            children: [\"Humidity = \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-bold\",\n              children: weatherResult.main.humidity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 11\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(Link, {\n        href: \"/demo\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/demo\",\n          className: \"px-4 md:px-8 mx-auto my-4 py-2 md:py-3 text-center rounded-full bg-green-500 text-white font-bold uppercase border-green-600 border hover:bg-green-700\",\n          children: \"Go back to Animation Demo Page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 3\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true);\n};\n\nexport default apiPage;","map":{"version":3,"sources":["/Users/jarryd/Documents/ActiveUni/Seasonall-NextJS-AnimeJS/pages/apitest.jsx"],"names":["Link","React","useEffect","useState","apiPage","geoData","setGeoData","weatherData","setWeatherData","getData","location","geoKey","weatherKey","travelLocation","query","fetch","response","json","console","log","results","IPLat","IPLon","weatherQuery","weatherResponse","length","map","result","i","city","country","timezone","name","weatherResult","main","temp","humidity"],"mappings":"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","sourcesContent":["import Link from 'next/link';\nimport React, { useEffect, useState } from 'react';\n\n\nconst apiPage = () => {\n\n  // const [location, setLocation] = useState([]); //useState hook to initialize the state to an empty array\n  const [geoData, setGeoData] = useState([]); //useState hook to initialize the state to an empty array\n  const [weatherData, setWeatherData] = useState([]); //useState hook to initialize the state to an empty array\n  \n    const getData = async (location) => {\n      const geoKey = '234979e2ff9e423095e4b2c869c1c97b'; //Move this to secure location\n      const weatherKey = 'd9e3acc582b222c6021692be631852c5'; //Move this to secure location\n      const travelLocation = location;\n      \n      const query = await fetch('https://api.geoapify.com/v1/geocode/search?text='+ travelLocation +\n      \"&limit=1&format=json&apiKey=\" +\n      geoKey);\n      const response = await query.json();\n      console.log(response);\n      setGeoData(response.results);\n\n      const IPLat = \"34.337306\";\n      const IPLon = \"-118.6681779\";\n      const weatherQuery = await fetch('\"https://api.openweathermap.org/data/2.5/weather?lat=' + IPLat + \"&lon=\" + IPLon + \"&appid=\" + weatherKey)\n      const weatherResponse = await weatherQuery.json();\n      console.log(weatherResponse);\n      setWeatherData(weatherResponse.results);\n    };\n    \n  return(\n    <>\n    <div className=\"w-1/2 m-16 xl:w-2/5 justify-center overflow-y-hidden\">\n      <h1 className=\"text-xl\">test page for API Data</h1>\n\n      <h4>Click a button to test the GeoLocation API</h4> \n      <button onClick={() => getData(\"New York\")}\n      className=\"bg-pink-500 hover:bg-pink-400 text-white font-bold py-2 my-4 mx-4 px-4 border-b-4 border-pink-700 hover:border-pink-500 rounded\">\n      New York\n      </button>\n\n      <button onClick={() => getData(\"Los Angeles\")}      \n      className=\"bg-green-500 hover:bg-green-400 text-white font-bold py-2 my-4 mx-4 px-4 border-b-4 border-green-700 hover:border-green-500 rounded\">\n      Los Angeles\n      </button>\n\n      <button onClick={() => getData(\"Memphis\")}      \n      className=\"bg-blue-500 hover:bg-blue-400 text-white font-bold py-2 my-4 mx-4 px-4 border-b-4 border-blue-700 hover:border-blue-500 rounded\">\n        Memphis\n      </button>\n    </div>\n\n  <div className=\"flex flex-col w-full m-16 xl:w-2/5 justify-center overflow-y-hidden\">\n    \n{/* Geo Data API Call */}\n  {\n   geoData && geoData.length && geoData.map((result, i) => {\n    return(\n      <div key={i}>\n        <h4 id=\"city\">City = <span className='font-bold'>{result.city}</span></h4>\n        <h4 id=\"country\">Country = <span className='font-bold'>{result.country}</span></h4>\n        <h4 id=\"Timezone\">Timezone = <span className='font-bold'>{result.timezone.name}</span></h4>\n      </div>\n    )\n    \n    })}\n    {weatherData && weatherData.length && weatherData.map((weatherResult, i) =>{\n      return(\n        <div key={i}>\n          <h4 id=\"rain\">Temp = <span className='font-bold'>{weatherResult.main.temp}</span></h4>\n          <h4 id=\"snow\">Wind Speed = <span className='font-bold'>{weatherResult.country}</span></h4>\n          <h4 id=\"other\">Humidity = <span className='font-bold'>{weatherResult.main.humidity}</span></h4>\n        </div>\n      )\n    }\n    )}\n\n{/* Weather Data API Call */}\n  {/* {\n    weatherData && weatherData.length && weatherData.map((weatherResult, i) =>{\n      return(\n        <div key={i}>\n          <h4 id=\"rain\">rain = <span className='font-bold'>{weatherResult.city}</span></h4>\n          <h4 id=\"snow\">snow = <span className='font-bold'>{weatherResult.country}</span></h4>\n          <h4 id=\"other\">other = <span className='font-bold'>{weatherResult.timezone.name}</span></h4>\n        </div>\n      )\n      }\n  } */}\n  <Link href=\"/demo\">\n  <a href=\"/demo\"\n      className=\"px-4 md:px-8 mx-auto my-4 py-2 md:py-3 text-center rounded-full bg-green-500 text-white font-bold uppercase border-green-600 border hover:bg-green-700\"\n      >\n      Go back to Animation Demo Page    \n      \n    </a>\n  </Link>\n  </div>\n\n    </>\n  )\n};\n\n  export default apiPage;"]},"metadata":{},"sourceType":"module"}